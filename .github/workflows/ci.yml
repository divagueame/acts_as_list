---
name: CI
on: [push, pull_request]

jobs:
  tests:
    name: Ruby ${{ matrix.ruby }}, DB ${{ matrix.db }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ruby: ["3.0", "3.1"]
        rails:
          - "6.1"
        db:
          - sqlite
          # - postgresql
          # - mysql
        os:
          - ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    #
    #   postgres:
    #     # Docker Hub image
    #     image: postgres
    #     # Provide the password for postgres
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_HOST_AUTH_METHOD: trust
    #     ports:
    #       - 5432:5432
    #     # Set health checks to wait until postgres has started
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    env:
      DB: ${{ matrix.db }}
      RAILS_VERSION: ${{ matrix.rails }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Update rubygems
        run: gem update --system
      - name: Enable PostgreSQL
        if: ${{ matrix.db == 'postgresql' }}
        run: sudo systemctl start postgresql.service
      - name: Create PostgreSQL User
        if: ${{ matrix.db == 'postgresql' }}
        run: sudo -u postgres -i createuser runner -s
      - name: Create PostgreSQL Database
        if: ${{ matrix.db == 'postgresql' }}
        run: createdb runner
      - name: Log versions
        run: echo ${{ matrix.rails }}
      - name: Run tests
        run: bundle exec rake
